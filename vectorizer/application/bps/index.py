import numpy as npfrom flask import Blueprint, requestfrom langdetect import detectfrom werkzeug.exceptions import BadRequestfrom application import models, loggerfrom application.utils.helpers import tokenizebp_index = Blueprint("bp_index", __name__)@bp_index.route("/", methods=["GET"])def index():    return "Univerdustry Vectorizer is running..."@bp_index.route("/vectorize", methods=["GET"])def get_word_vector():    text = request.json.get("text", None)    if text is None or not isinstance(text, str):        raise BadRequest    text = text.strip()    if text == "":        raise BadRequest    text = request.json.get("text", None)    lang = request.json.get("lang", detect(text))    tokens = tokenize(text)    model = models.get(lang, models["en"])    vectors = list()    for token in tokens:        vectors.append(list(map(float, model.get_word_vector(token))))    result_vector = np.mean(vectors, axis=0)    return {"text": text, "vector": list(result_vector)}