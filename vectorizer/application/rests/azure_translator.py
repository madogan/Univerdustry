import requestsfrom application.app import loggerfrom collections import defaultdictfrom sentence_splitter import split_text_into_sentencessubscription_key = "09fff28b119542b4a1d5db988dbcacc8"def atranslate(text, dest_lang):    try:        url = f'https://testlabtranslate.cognitiveservices.azure.com' \              f'/translator/text/v3.0/translate?api-version=3.0&to={dest_lang}'        headers = {            "Ocp-Apim-Subscription-Key": subscription_key,            "Content-type": "application/json"        }        sents = split_text_into_sentences(text=text, language='en')        len_sents = len(sents)        result = ""        for i in range(0, len_sents, 100):            data = [{"text": " ".join(sents[i:i+10])}]            resp = requests.post(url, headers=headers, json=data).json()            result += " ".join([r["translations"][0]["text"] for r in resp])        return result    except Exception as e:        logger.exception(e)        return Falsedef adetect(text):    try:        url = f'https://testlabtranslate.cognitiveservices.azure.com' \              f'/translator/text/v3.0/detect?api-version=3.0&'        headers = {            "Ocp-Apim-Subscription-Key": subscription_key,            "Content-type": "application/json"        }        sents = split_text_into_sentences(text=text, language='en')        len_sents = len(sents)        langs = defaultdict(int)        for i in range(0, len_sents, 100):            data = [{"text": " ".join(sents[i:i + 10])}]            resp = requests.post(url, headers=headers, json=data).json()            try:                for item in resp:                    langs[item["language"]] += 1            except Exception:                continue        most_lang, most_lang_count = "en", 0        for lang, count in langs.items():            if count > most_lang_count:                most_lang = lang                most_lang_count = count        return most_lang    except Exception as e:        logger.exception(e)        return False