from flask import Blueprint, jsonifyfrom application import logger, scholarypublication_bp = Blueprint("publication_bp", __name__)@publication_bp.route("/publication/<str:query>")def get_publication(query):    resd = {"status": "ok"}    logger.info(f'I am in get_publication with {query}')    query_result = scholary.search_pubs_query(query)    logger.info(f'Query_result: {query_result}')    try:        pub_info = next(query_result).fill()    except StopIteration:        logger.info(f'Publication for query ({query}) not found.')        resd["status"] = "failure"        resd["failure_detail"] = "Publication not found."        return resd, 404    if not pub_info:        logger.info(f'Publication for query ({query}) not found.')        resd["status"] = "failure"        resd["failure_detail"] = "Publication not found."        return resd, 404    # Parse to dictionary as suitable with database columns.    resd["publication"] = {        "ident": pub_info.id_citations.split(":")[1],        "title": pub_info.bib["title"].replace("\n", " ").replace(            "\r", " ").replace("\t", " ").strip(),        "year": pub_info.bib.get("year", None),        "url": pub_info.bib.get("url", None),        "source_url": pub_info.bib.get("eprint", None),        "cited_by": getattr(pub_info, "citedby", 0)    }    return jsonify(resd), 200