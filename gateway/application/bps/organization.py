from flask import Blueprint, requestfrom werkzeug.exceptions import BadRequestfrom application import loggerfrom application.rests.mongo import find, insert_onefrom application.utils.decorators import json_responsefrom application.utils.helpers import clean_textbp_organization = Blueprint("bp_organization", __name__,                            url_prefix="/organization")@bp_organization.route("/", methods=["POST"])@json_responsedef add_organization():    try:        if not request.is_json:            raise BadRequest        organization = dict(request.json)        organization_name = organization.get("name", None)        if not organization:            raise BadRequest        organization["name"] = clean_text(organization_name)        return insert_one("organization", organization)    except Exception as e:        logger.exception(e)        return {"status": "failure", "detail": str(e)}@bp_organization.route("/", methods=["GET"])@json_responsedef get_organizations():    try:        if not request.is_json:            raise BadRequest        return find("organization", request.json)    except Exception as e:        logger.exception(e)        return {"status": "failure", "detail": str(e)}