TODO: Test for errors.
TODO: Organizasyonları kaydetmeden önce temizle.
TODO: Secondary pdf finding.
TODO: Start scraping.
TODO: Vektörleri güncelleyen istek noktları yazılacak.
TODO: Sonuç verme senaryolarının uygulanması.
TODO: Akış diyagramı çizilecek.
TODO: Arayüz yapılacak.

NOTES:
	I- HOCA VERİTABANI OLUŞTURMA

	* Türkiye'deki tüm üniversitelerde (başlangıç için sadece Marmara'da ) görev yapan 
		tüm öğretim üyelerinin (Dr. ve üzeri - ünvanında Dr. geçen) toplanan tüm yayın, 
		proje  ve kişisel web sayfası dökümanlarının İngilizce ve Türkçe olarak ayrı ayrı, 
		her biri hoca ile ilişkili olarak ham hallerinin mongodb'de saklanıp elasticsearch'de indekslenmesi 

	* Bu veritabanının peryodik olarak, örneğin her ay güncellenerek hocaların yeni yayınları 7
		varsa bunların eklenmesi, kişisel web sayfalarının güncel versiyonlarının kullanılması

	Daha sonra mongodb'den her bir hoca için dökümanları teker teker okuyarak
		a- İngilizce olanların İngilizce FastText pretrained kelime vektörleri ile dökümanın vektörünü hesapla,
			hoca ile ilişkili olarak bir veritabanında saklayın
		b- Türkçe olanların Türkçe FastText pretrained kelime vektörleri ile dökümanın vektörünü hesapla, 
			hoca ile ilişkili olarak bir veritabanında saklayın
		c- İngilizce veya Türkçe dökümanların (diğer dillerdeki dökümanları gözardı edin) vektörlerini 
			MUSE gibi bir multilingual veya bilingual embedding ile vektörünü hesaplayıp veritabanında saklayın
		
		(Burada bahsedilen nasıl bir sistem/veritabanı olarak bunu size bırakıyorum, en uygun sistemi tasarlayınız. 
		 muhtemelen 300 uzunluğunda çok sayıda vektörü saklamak, bunlara hızlıca erişmek ve yine örneğin 300 uzunluğunda 
		 sorgu vektörü geldiğinde bu sorgu vektörü ile veritabanındaki çok sayıda vektör arasında en hızlı şekilde cosine 
		 similarity hesaplayıp döndürecek bir sistem/veritabanı olmalı)

	II- SORGU OLARAK GELEN PROJE DÖKÜMANI İÇİN EN UYGUN HOCALARIN SORGULANMASI/EŞLEŞTİRİLMESİ
	(varsayım: sorgu olarak gelen proje dökümanı Türkçe'dir) Türkçe proje dökümanını (özeti/başlığı/tüm döküman)  
	 
	1- 
		a- Türkçe dökümanların tutulduğu elastic'e sorgu olarak geç, dönen ilk 100 döküman ile ilişkili hocaları dökümanların 
			alaka skorları ile ağırlıklandırarak her hoca için bir puan hesapla, hocaları bu puana göre sırala, hocaların profilini 
			(çalışma alanları, güncel bir kaç yayın başlığı veya en çok ref almış birkaç yayın başlığı) ve hocanın kısa profili altında 
			sorgu sonucu dönen hoca dökümanlarını alaka puanı ile listele (burada görsel tasarımınız çok iyi olmalı, bunu size bırakıyorum)
		b- google translate API ile sorguyu İngilizce'ye çevirip İngilizce dökümanların tutulduğu elastic'e sorgu olarak geç, 
			dönen ilk 100 döküman ile ilişkili hocaları dökümanların alaka skorları ile ağırlıklandırarak her hoca için bir puan hesapla, 
			hocaları bu puana göre sırala, hocaların profilini (çalışma alanları, güncel yayın başlıkları veya en çok ref almış yayın başlıkları gibi) 
			ve hocanın kısa profili altında sorgu sonucu dönen hoca dökümanlarını alaka puanı ile listele

		c- a ve b yi sorgu sonucu ekranında birleştir
	  
	2- 
		a- Türkçe pretrained FastText kelime vektörleri ile sorgu dökümanının vektörünü hesapla,  
			I.a'daki veritabanındaki vektörler ile cosine hesapla, en benzer 100 (bu bir parametre) 
			dökümanı al bu dökümanları ve ilişkili oldukları hocaları hoca başına döküman sayısı ve cosine 
			similarity puanlarına göre ağırlıklı bir puan hesapla, bu puana göre hocaları sırala, 1.a veya b de 
			kullannılan aynı arayüz ile kullanıcıya listele
		b- a'nın aynısı fakat sorguyu google translate ile İngilizce'ye çevirip İngilizce pretrained FastText 
			vektörleri ile döküman vektörü hesaplayıp hocaların ingilizce vektörlerinin olduğu veritabanını kullanıyoruz

		c-  aynı işlemler fakat Türkçe dökümanı sorgu olarak alıp bilingual veya multilingual vektörlerini hesaplayıp 
			bilingual veya multilingual hoca döküman vektörlerinin olduğu veritabanını kullanıyoruz

	3- 1 ve 2'nin bir şekilde birleştirilmesi

	Dolayısı ile 7 farklı sistem (arayüz) olması gerekiyor, projenin önemli ve akademik kısmı bunların kıyaslanması ve buradan yayın çıkartılması

	Sorularınız için Salı günü öğleden sonra uğrayabilirsiniz. Lütfen gelmeden önce mail atınız. Netleştirmek için yüz yüze görüşmek iyi olur. 
