from elasticsearch import NotFoundErrorfrom application import celery, es, loggerfrom application.tasks.authors_scraper import t_authors_scraperfrom application.utils.decorators import celery_exception_handler@celery.task(bind=True, name="starter", max_retries=3)@celery_exception_handler(ConnectionError, NotFoundError)def t_starter(self):    resd = {"status": "ok"}    body = {        "mappings": {            "properties": {                "title": {                    "type": "text"                },                "content": {                    "type": "text"                },                "lang": {                    "type": "text"                },                "year": {                    "type": "integer"                },                "citedby": {                    "type": "integer"                },                "authors": {                    "type": "object"                },                "vector": {                    "type": "dense_vector", "dims": 300                }            }        }    }    resp = es.indices.create(        index="publication",        body=body,        # ignore 400 cause by IndexAlreadyExistsException when creating an index        ignore=400,        wait_for_active_shards="5"    )    logger.info(f'Create indices response: {resp}')    t_authors_scraper.apply_async()    return resd